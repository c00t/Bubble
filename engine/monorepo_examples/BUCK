rust_library(
    name = "foundation",
    edition = "2021",
    srcs = glob(
        ["foundation/src/**/*.rs"],
    ),
    deps = [
      "//third-party/rust:inventory",
      "//third-party/rust:linkme",
    ],
    visibility = [
      ":app",
    ],
)

rust_library(
    name = "static_plugin",
    srcs = glob(
        ["static_plugin/src/**/*.rs"],
    ),
    deps = [
      ":foundation",
      "//third-party/rust:inventory",
      "//third-party/rust:linkme",
    ],
    visibility = [
      ":app",
    ],
#   preferred_linkage = "shared",
)

rust_library(
    name = "static_plugin_lib",
    srcs = glob(
        ["static_plugin/src/**/*.rs"],
    ),
    deps = [
      ":foundation",
      "//third-party/rust:inventory",
      "//third-party/rust:linkme",
    ],
    visibility = [
      ":app",
    ],
    rustc_flags = [
      "--crate-type=staticlib",
    ],
#   preferred_linkage = "shared",
)

genrule(
    name = "play",
    out = "play.txt",
    cmd = "echo play > $OUT",
    visibility = [
      "PUBLIC"
    ],
)

rust_binary(
    name = "app",
    srcs = glob(
      ["app/src/**/*.rs"],
    ),
    rustc_flags = [
#     "--extern=static_plugin=$(location :static_plugin)",
      "-lstatic:+verbatim,+whole-archive=static_plugin",
    ],
    linker_flags = [
      # for subtargets of rust_library, see @prelude//rust/rust_library.bzl L482-L542
      "$(location :static_plugin[static])",
#     "/WHOLEARCHIVE:static_plugin",
    ],
#   link_style = "static",
    deps = [
      ":static_plugin",
      ":foundation",
      "//third-party/rust:inventory",
      "//third-party/rust:linkme",
    ],
)

# download eigen and build it
git_fetch(
    name = "eigen.git",
    repo = "https://gitlab.com/libeigen/eigen.git",
    rev = "86aee3d9c5b0ea73f7854901c1ce216135f1228b",
    sub_targets = [
      "Eigen",
    ],
)

prebuilt_cxx_library(
  name = "eigen3",
  header_only = True,
  header_namespace = "",
  exported_headers = [":eigen.git[Eigen]"],
  visibility = ["PUBLIC"],
  deps = [
    ":eigen.git",
  ],
)

cxx_binary(
    name = "eigen3_test",
    srcs = ["cxx_bin/main.cpp"],
    link_style = "static",
    deps = [
      ":eigen3"
    ],
    linker_flags = select({
      "config//os:windows":["ws2_32.lib","Advapi32.lib","Userenv.lib","ntdll.lib","Bcrypt.lib", "Synchronization.lib"],
    }),
)
